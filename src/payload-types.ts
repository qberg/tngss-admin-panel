/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    speakers: Speaker;
    'speaker-types': SpeakerType;
    events: Event;
    'networking-sessions': NetworkingSession;
    'event-formats': EventFormat;
    tags: Tag;
    halls: Hall;
    zones: Zone;
    venues: Venue;
    cities: City;
    tickets: Ticket;
    'ticket-types': TicketType;
    representatives: Representative;
    users: User;
    media: Media;
    documents: Document;
    'app-versions': AppVersion;
    'attendee-passes': AttendeePass;
    organisation_roles: OrganisationRole;
    exports: Export;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    speakers: {
      speaking_events: 'events';
    };
    halls: {
      zones: 'zones';
    };
  };
  collectionsSelect: {
    speakers: SpeakersSelect<false> | SpeakersSelect<true>;
    'speaker-types': SpeakerTypesSelect<false> | SpeakerTypesSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    'networking-sessions': NetworkingSessionsSelect<false> | NetworkingSessionsSelect<true>;
    'event-formats': EventFormatsSelect<false> | EventFormatsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    halls: HallsSelect<false> | HallsSelect<true>;
    zones: ZonesSelect<false> | ZonesSelect<true>;
    venues: VenuesSelect<false> | VenuesSelect<true>;
    cities: CitiesSelect<false> | CitiesSelect<true>;
    tickets: TicketsSelect<false> | TicketsSelect<true>;
    'ticket-types': TicketTypesSelect<false> | TicketTypesSelect<true>;
    representatives: RepresentativesSelect<false> | RepresentativesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    'app-versions': AppVersionsSelect<false> | AppVersionsSelect<true>;
    'attendee-passes': AttendeePassesSelect<false> | AttendeePassesSelect<true>;
    organisation_roles: OrganisationRolesSelect<false> | OrganisationRolesSelect<true>;
    exports: ExportsSelect<false> | ExportsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'home-wp': HomeWp;
    'about-us-wp': AboutUsWp;
    'why-attend-wp': WhyAttendWp;
    'why-tn-wp': WhyTnWp;
    'tickets-info-wp': TicketsInfoWp;
    'faq-wp': FaqWp;
    'spons-and-partners-wp': SponsAndPartnersWp;
    'why-sponsor-wp': WhySponsorWp;
    'sponsor-form-wp': SponsorFormWp;
    'home-app': HomeApp;
    'featured-content-app': FeaturedContentApp;
    'about-tngss-app': AboutTngssApp;
    'media-form-wp': MediaFormWp;
  };
  globalsSelect: {
    'home-wp': HomeWpSelect<false> | HomeWpSelect<true>;
    'about-us-wp': AboutUsWpSelect<false> | AboutUsWpSelect<true>;
    'why-attend-wp': WhyAttendWpSelect<false> | WhyAttendWpSelect<true>;
    'why-tn-wp': WhyTnWpSelect<false> | WhyTnWpSelect<true>;
    'tickets-info-wp': TicketsInfoWpSelect<false> | TicketsInfoWpSelect<true>;
    'faq-wp': FaqWpSelect<false> | FaqWpSelect<true>;
    'spons-and-partners-wp': SponsAndPartnersWpSelect<false> | SponsAndPartnersWpSelect<true>;
    'why-sponsor-wp': WhySponsorWpSelect<false> | WhySponsorWpSelect<true>;
    'sponsor-form-wp': SponsorFormWpSelect<false> | SponsorFormWpSelect<true>;
    'home-app': HomeAppSelect<false> | HomeAppSelect<true>;
    'featured-content-app': FeaturedContentAppSelect<false> | FeaturedContentAppSelect<true>;
    'about-tngss-app': AboutTngssAppSelect<false> | AboutTngssAppSelect<true>;
    'media-form-wp': MediaFormWpSelect<false> | MediaFormWpSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      createCollectionExport: TaskCreateCollectionExport;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speakers".
 */
export interface Speaker {
  id: string;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  /**
   * Enable this to make the content visible to all users (e.g., public website visitors).
   */
  isPublic?: boolean | null;
  /**
   * Mark as deleted (soft delete)
   */
  deleted?: boolean | null;
  speaks_at?: ('main_event' | 'partner_event')[] | null;
  /**
   * Upload image of the speaker
   */
  profile_image?: (string | null) | Media;
  name: string;
  designation: string;
  organization: string;
  speaker_type: string | SpeakerType;
  linkedin_url?: string | null;
  location?: {
    city?: string | null;
    country?: string | null;
  };
  summary?: string | null;
  experience?:
    | {
        company?: string | null;
        area?: string | null;
        designation?: string | null;
        id?: string | null;
      }[]
    | null;
  alma_matter?:
    | {
        college?: string | null;
        city?: string | null;
        degree?: string | null;
        id?: string | null;
      }[]
    | null;
  languages?:
    | {
        lang?: string | null;
        id?: string | null;
      }[]
    | null;
  tags?: (string | Tag)[] | null;
  /**
   * Upload flight details - add as many documents or images as needed
   */
  travel_details?:
    | {
        file_type?: ('document' | 'media') | null;
        /**
         * Upload PDF document
         */
        document?: (string | null) | Document;
        /**
         * Upload image file (JPG, PNG, etc.)
         */
        media?: (string | null) | Media;
        /**
         * Optional description for this file
         */
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  hotel?: string | null;
  hotel_map_url?: string | null;
  room_number?: string | null;
  assigned_coordinator?: (string | null) | Representative;
  /**
   * Special requirements, preferences, etc.
   */
  accommodation_details?: string | null;
  duration: {
    from_date: string;
    to_date: string;
  };
  status?: ('confirmed' | 'pending' | 'cancelled' | 'completed') | null;
  /**
   * Lower numbers appear first (1 = highest)
   */
  sort_order?: number | null;
  speaking_events?: {
    docs?: (string | Event)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  'audit-log'?: {
    /**
     * User who created this content
     */
    createdBy?: (string | null) | User;
    /**
     * User who last updated this content
     */
    updatedBy?: (string | null) | User;
    log?: {
      createdAt?: string | null;
      updatedAt?: string | null;
      /**
       * Document version number
       */
      version?: number | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * Alternative text for accessibility and SEO
   */
  alt: string;
  /**
   * What type of media is this?
   */
  mediaType:
    | 'speaker_photos'
    | 'event_images'
    | 'event_videos'
    | 'marketing_assets'
    | 'sponsorship'
    | 'venue_photos'
    | 'presentation_media'
    | 'branding'
    | 'social_media'
    | 'press_media'
    | 'website_content'
    | 'other';
  'audit-log'?: {
    /**
     * User who created this content
     */
    createdBy?: (string | null) | User;
    /**
     * User who last updated this content
     */
    updatedBy?: (string | null) | User;
    log?: {
      createdAt?: string | null;
      updatedAt?: string | null;
      /**
       * Document version number
       */
      version?: number | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Manage admin panel users and their permissions
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  /**
   * Admin: Full system access, Event Manager: Manage events and attendees (can create content managers), Content Manager: Manage content of website (cannot create users)
   */
  roles: ('admin' | 'event-manager' | 'content-manager' | 'user')[];
  /**
   * Suspended users cannot log in to the admin panel
   */
  status?: ('active' | 'suspended') | null;
  /**
   * Last successful login to admin panel
   */
  lastLogin?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Manage speaker type categories (Domestic, International, etc.)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speaker-types".
 */
export interface SpeakerType {
  id: string;
  /**
   * Unique name for the speaker type (e.g., Domestic, International)
   */
  name: string;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  /**
   * Optional description of this speaker type
   */
  description?: string | null;
  /**
   * Enable to include this item in lists, filters, or dropdowns.
   */
  isActive?: boolean | null;
  /**
   * Order in which this appears in dropdowns (lower = first)
   */
  sort_order?: number | null;
  /**
   * Whether speakers of this type typically need visa documents
   */
  requiresVisa?: boolean | null;
  /**
   * Default accommodation level for this speaker type
   */
  defaultAccommodation?: ('standard_hotel' | 'premium_hotel' | 'corporate_housing' | 'none') | null;
  /**
   * Typical budget range for speakers of this type
   */
  averageBudget?: {
    min?: number | null;
    max?: number | null;
    currency?: ('INR' | 'USD' | 'EUR' | 'GBP') | null;
  };
  /**
   * Documents typically required for this speaker type
   */
  requiredDocuments?:
    | {
        document:
          | 'passport'
          | 'visa'
          | 'flight_itinerary'
          | 'hotel_booking'
          | 'speaker_agreement'
          | 'tax_forms'
          | 'photo_id'
          | 'resume';
        id?: string | null;
      }[]
    | null;
  /**
   * Hex color code for UI display (e.g., #FF5722 for International)
   */
  color?: string | null;
  /**
   * Material UI icon name or emoji for display
   */
  icon?: string | null;
  /**
   * Number of speakers using this type (auto-calculated)
   */
  usageCount?: number | null;
  /**
   * Internal notes for administrators
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  name: string;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  /**
   * Give a short brief on what the document is about
   */
  title: string;
  /**
   * Categorize for better organization
   */
  category:
    | 'flight_details'
    | 'hotel_booking'
    | 'visa_documents'
    | 'speaker_contract'
    | 'presentation_materials'
    | 'invoice_receipt'
    | 'id_documents'
    | 'event_materials'
    | 'other';
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "representatives".
 */
export interface Representative {
  id: string;
  name: string;
  designation?: string | null;
  org_name?: string | null;
  phone_number?: string | null;
  email_id?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: string;
  /**
   * Ensure sponsor logos are embedded in the image, if applicable
   */
  banner_image?: (string | null) | Media;
  title: string;
  /**
   * Enable this to make the content visible to all users (e.g., public website visitors).
   */
  isPublic?: boolean | null;
  main_or_partner: 'main_event' | 'partner_event';
  access_level?: (string | null) | TicketType;
  format: string | EventFormat;
  tags: (string | Tag)[];
  /**
   * Updated automatically by registration service
   */
  current_registerations?: number | null;
  /**
   * URL-friendly identifier (English only, auto-generated from title)
   */
  slug?: string | null;
  about?: string | null;
  schedule: {
    from_date: string;
    to_date: string;
  };
  hall?: (string | null) | Hall;
  zone?: (string | null) | Zone;
  partner_event_venue?: {
    event_mode: 'online' | 'offline';
    platform?: ('zoom' | 'teams' | 'meet' | 'youtube' | 'custom') | null;
    /**
     * Link for virtual attendees to join
     */
    joinUrl?: string | null;
    meetingId?: string | null;
    passcode?: string | null;
    venue: string;
    city: string | City;
    map_url?: string | null;
  };
  'audit-log'?: {
    /**
     * User who created this content
     */
    createdBy?: (string | null) | User;
    /**
     * User who last updated this content
     */
    updatedBy?: (string | null) | User;
    log?: {
      createdAt?: string | null;
      updatedAt?: string | null;
      /**
       * Document version number
       */
      version?: number | null;
    };
  };
  agenda?:
    | {
        time?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  speakers?:
    | {
        speaker?: (string | null) | Speaker;
        id?: string | null;
      }[]
    | null;
  /**
   * How should users register for this event?
   */
  registeration_mode: 'none' | 'fcfs' | 'approval';
  /**
   * Settings specific to FCFS registeration
   */
  fcfs_settings?: {
    /**
     * Set the maximum number of attendees for this event
     */
    capacity_settings?: {
      /**
       * Choose whether this event has a capacity limit
       */
      capacity_type: 'limited' | 'unlimited';
      /**
       * Maximum number of people who can attend
       */
      max_capacity?: number | null;
      /**
       * Show warning when registrations exceed this number (optional)
       */
      soft_capacity_warning?: number | null;
    };
    /**
     * Allow users to join waitlist when event reaches capacity
     */
    enable_waitlist?: boolean | null;
    /**
     * Maximum capacity of the waitlist
     */
    waitlist_capacity?: number | null;
    /**
     * Automatically paromote users when spots become available
     */
    auto_promote_from_waitlist?: boolean | null;
    registeration: {
      from_date: string;
      to_date: string;
    };
    unlimited_capacity_settings?: {
      /**
       * Send notification to admins when registrations reach this number
       */
      notify_admins_at?: number | null;
      /**
       * Automatically close registration at this number (optional safety limit)
       */
      auto_close_registeration_at?: number | null;
    };
  };
  /**
   * Settings specific to approval based event registeration
   */
  approval_settings?: {
    registeration: {
      from_date: string;
      to_date: string;
    };
    /**
     * Set the maximum number of attendees for this event
     */
    capacity_settings?: {
      /**
       * Maximum number of people who can attend
       */
      max_capacity?: number | null;
    };
  };
  /**
   * Mark as deleted (soft delete)
   */
  deleted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ticket-types".
 */
export interface TicketType {
  id: string;
  name: string;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  external_integration?: {
    /**
     * Reference ID in kamelon ticketing system
     */
    vendorTicketTypeId?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-formats".
 */
export interface EventFormat {
  id: string;
  name?: string | null;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "halls".
 */
export interface Hall {
  id: string;
  venue: string | Venue;
  name: string;
  image?: (string | null) | Media;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  /**
   * Number of zones in this hall
   */
  zones_count?: number | null;
  zones?: {
    docs?: (string | Zone)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues".
 */
export interface Venue {
  id: string;
  name: string;
  city: string;
  type: 'main_event' | 'partner_event';
  mapUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zones".
 */
export interface Zone {
  id: string;
  hall: string | Hall;
  hex_code?: string | null;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  name: string;
  is_featured?: boolean | null;
  dimensions?: string | null;
  capacity?: number | null;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities".
 */
export interface City {
  id: string;
  name: string;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networking-sessions".
 */
export interface NetworkingSession {
  id: string;
  main_or_partner: 'main_event' | 'partner_event';
  /**
   * Auto-generated based on zone and time selection
   */
  display_name?: string | null;
  /**
   * Enable this to make the content visible to all users (e.g., public website visitors).
   */
  isPublic?: boolean | null;
  main_event_sessions_config?: {
    zone?: (string | null) | Zone;
    start_time?: string | null;
    end_time?: string | null;
    /**
     * How long each individual meetings lasts
     */
    meeting_duration?: number | null;
    /**
     * How many meetings can happen at the same time (based on tables/space)
     */
    concurrent_meetings?: number | null;
    allowed_ticket_types?: (string | null) | TicketType;
  };
  partner_event_sessions_config?: {
    venue_name?: string | null;
    city?: (string | null) | City;
    /**
     * Users will choose their own meeting times on this date
     */
    event_date: string;
    /**
     * When user picks start time, end time = start + this duration
     */
    default_meeting_duration: number;
    allowed_time_range?: {
      /**
       * Earliest time users can book meetings
       */
      earliest_start?: string | null;
      /**
       * Latest time users can start meetings
       */
      latest_start?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tickets".
 */
export interface Ticket {
  id: string;
  /**
   * URL-friendly identifier (English only, auto-generated from name)
   */
  slug?: string | null;
  /**
   * Enable this to make the content visible to all users (e.g., public website visitors).
   */
  isPublic?: boolean | null;
  name?: string | null;
  description?: string | null;
  badge_text?: string | null;
  pricing?: {
    is_free?: boolean | null;
    /**
     * Enable this to offer discounted prices alongside regular pricing
     */
    has_discount?: boolean | null;
    discount_info?: {
      /**
       * Text to display about when discount pricing ends
       */
      discount_text?: string | null;
    };
    /**
     * The primary currency for this ticket
     */
    base_currency?: ('INR' | 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AUD' | 'SGD' | 'JPY') | null;
    /**
     * Add prices for different currencies
     */
    currency_prices?:
      | {
          currency: 'INR' | 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AUD' | 'SGD' | 'JPY';
          actual_price: number;
          /**
           * Optional discounted price (must be less than regular price)
           */
          discounted_price?: number | null;
          unit?: string | null;
          gst?: {
            tax_applicable?: boolean | null;
            tax_rate?: number | null;
            tax_inclusive?: boolean | null;
            tax_code?: string | null;
            tax_label?: string | null;
          };
          currency_notes?: string | null;
          id?: string | null;
        }[]
      | null;
    pricing_notes?: string | null;
  };
  /**
   * Automatically show pricing in user's local currency based on browser settings
   */
  auto_currency_detection?: boolean | null;
  /**
   * List of benefits included with this ticket type
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  'audit-log'?: {
    /**
     * User who created this content
     */
    createdBy?: (string | null) | User;
    /**
     * User who last updated this content
     */
    updatedBy?: (string | null) | User;
    log?: {
      createdAt?: string | null;
      updatedAt?: string | null;
      /**
       * Document version number
       */
      version?: number | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "app-versions".
 */
export interface AppVersion {
  id: string;
  isCurrentVersion?: boolean | null;
  version: string;
  android_version: string;
  platform: 'ios' | 'android' | 'universal';
  updateType: 'optional' | 'recommended' | 'force';
  /**
   * Users below this version must update
   */
  minimumSupportedVersion?: string | null;
  releaseNotes?: string | null;
  appStoreUrl?: string | null;
  playStoreUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendee-passes".
 */
export interface AttendeePass {
  id: string;
  /**
   * Unique pass identifier (e.g., TNGSSV_10914)
   */
  pass_id: string;
  pass_type: string;
  /**
   * UUID identifier for the pass type
   */
  pass_type_id: string;
  name: string;
  /**
   * Primary lookup field for app user onboarding
   */
  email?: string | null;
  /**
   * From pass_data.gender
   */
  gender?: string | null;
  mobile: string;
  /**
   * Job title/role from pass_data.designation
   */
  designation?: string | null;
  /**
   * Company/organisation from pass_data.organisation
   */
  organisation?: string | null;
  /**
   * Email of person who made the booking (may differ from attendee)
   */
  registration_email?: string | null;
  /**
   * Organization that made the booking
   */
  registration_organisation?: string | null;
  registration_city?: string | null;
  registration_state?: string | null;
  registration_country?: string | null;
  /**
   * Main persona categorisation (From visitor_data.organisationType)
   */
  organisation_type:
    | 'startup'
    | 'aspirants_individuals'
    | 'incubation_acceleration'
    | 'investors'
    | 'government'
    | 'industry_corporate'
    | 'mentor_sme'
    | 'ecosystem_service_provider'
    | 'others';
  /**
   * From visitor_data.profileType - detailed user categorization
   */
  profile_type:
    | 'dpii'
    | 'non_dpiit'
    | 'college_student'
    | 'working_professional'
    | 'state_government'
    | 'union_government'
    | 'international'
    | 'banks'
    | 'hnis'
    | 'angel_investor'
    | 'venture_capitalists'
    | 'angel_networks'
    | 'family_office'
    | 'private_equity'
    | 'revenue_based_financing'
    | 'venture_debt'
    | 'limited_partners'
    | 'mentor'
    | 'subject_matter_expert'
    | 'education_institution'
    | 'business_social_forums'
    | 'startup_community'
    | 'ngo'
    | 'media_agency'
    | 'r&d_agency'
    | 'legal_compliance_services'
    | 'consulting_advisory_services'
    | 'coworking_space'
    | 'makerspace'
    | 'financial_services'
    | 'technology_services'
    | 'marketing_branding_services'
    | 'design_agency'
    | 'industry_association'
    | 'incubators'
    | 'accelerators'
    | 'corporates'
    | 'none';
  /**
   * From visitor_data.sectorInterested - sector user is interested in
   */
  sector_interested:
    | 'sector_agnostic'
    | 'aerospace_defence_spacetech'
    | 'agriculture_foodtech'
    | 'ai_ml_iot'
    | 'art_culture_architecture'
    | 'automotive_ev_smart_mobility'
    | 'blue_economy'
    | 'chemicals_materials'
    | 'circular_economy'
    | 'climate_tech_clean_energy'
    | 'data_mining_analytics'
    | 'edutech'
    | 'femtech'
    | 'fintech_insurtech'
    | 'healthcare_life_sciences'
    | 'hr_tech_smart_workforce'
    | 'industry_4_advanced_manufacturing'
    | 'lifestyle_personalcare_d2c'
    | 'marketing_tech_mice'
    | 'media_entertainment'
    | 'proptech_legaltech_regtech'
    | 'retail_tech'
    | 'saas_software_it_ites'
    | 'smart_cities_e_governance'
    | 'social_impact_rural_livelihood_sustainability'
    | 'sports_tech_gaming'
    | 'supply_chain_logistics'
    | 'telecom_networking_hardware'
    | 'textiletech_fashion'
    | 'travel_tourism'
    | 'web3_blockchain_vr_ar';
  /**
   * Reason for attending from registration
   */
  why_attending:
    | 'meetStakeholders'
    | 'learnTechnologies'
    | 'network'
    | 'sourceSolutions'
    | 'fundraising'
    | 'exploreStartupEcosystem'
    | 'exploreIndiaTN'
    | 'leadGeneration'
    | 'funding';
  /**
   * Website URL from registration
   */
  website?: string | null;
  /**
   * When pass was originally created in PostgreSQL
   */
  legacy_created_at?: string | null;
  /**
   * Original visitor_id from PostgreSQL (links to booking)
   */
  legacy_visitor_id: string;
  /**
   * Has attendee checked in at event?
   */
  checked_in?: boolean | null;
  /**
   * Raw check-in data from PostgreSQL
   */
  checkin_data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Notes from data migration (e.g., value mappings applied)
   */
  migration_notes?: string | null;
  /**
   * Indicates if this is an upgrade from a previous pass type
   */
  upgrade?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organisation_roles".
 */
export interface OrganisationRole {
  id: string;
  /**
   * Main persona categorisation (From visitor_data.organisationType)
   */
  organisation_type:
    | 'startup'
    | 'aspirants_individuals'
    | 'incubation_acceleration'
    | 'investors'
    | 'government'
    | 'industry_corporate'
    | 'mentor_sme'
    | 'ecosystem_service_provider'
    | 'others';
  roles?:
    | {
        label?: string | null;
        /**
         * Will be autogenerated
         */
        key?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports".
 */
export interface Export {
  id: string;
  name?: string | null;
  format?: ('csv' | 'json') | null;
  limit?: number | null;
  sort?: string | null;
  drafts?: ('yes' | 'no') | null;
  selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
  fields?: string[] | null;
  collectionSlug: string;
  where?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'createCollectionExport';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'createCollectionExport') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'speakers';
        value: string | Speaker;
      } | null)
    | ({
        relationTo: 'speaker-types';
        value: string | SpeakerType;
      } | null)
    | ({
        relationTo: 'events';
        value: string | Event;
      } | null)
    | ({
        relationTo: 'networking-sessions';
        value: string | NetworkingSession;
      } | null)
    | ({
        relationTo: 'event-formats';
        value: string | EventFormat;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'halls';
        value: string | Hall;
      } | null)
    | ({
        relationTo: 'zones';
        value: string | Zone;
      } | null)
    | ({
        relationTo: 'venues';
        value: string | Venue;
      } | null)
    | ({
        relationTo: 'cities';
        value: string | City;
      } | null)
    | ({
        relationTo: 'tickets';
        value: string | Ticket;
      } | null)
    | ({
        relationTo: 'ticket-types';
        value: string | TicketType;
      } | null)
    | ({
        relationTo: 'representatives';
        value: string | Representative;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'documents';
        value: string | Document;
      } | null)
    | ({
        relationTo: 'app-versions';
        value: string | AppVersion;
      } | null)
    | ({
        relationTo: 'attendee-passes';
        value: string | AttendeePass;
      } | null)
    | ({
        relationTo: 'organisation_roles';
        value: string | OrganisationRole;
      } | null)
    | ({
        relationTo: 'exports';
        value: string | Export;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speakers_select".
 */
export interface SpeakersSelect<T extends boolean = true> {
  slug?: T;
  isPublic?: T;
  deleted?: T;
  speaks_at?: T;
  profile_image?: T;
  name?: T;
  designation?: T;
  organization?: T;
  speaker_type?: T;
  linkedin_url?: T;
  location?:
    | T
    | {
        city?: T;
        country?: T;
      };
  summary?: T;
  experience?:
    | T
    | {
        company?: T;
        area?: T;
        designation?: T;
        id?: T;
      };
  alma_matter?:
    | T
    | {
        college?: T;
        city?: T;
        degree?: T;
        id?: T;
      };
  languages?:
    | T
    | {
        lang?: T;
        id?: T;
      };
  tags?: T;
  travel_details?:
    | T
    | {
        file_type?: T;
        document?: T;
        media?: T;
        description?: T;
        id?: T;
      };
  hotel?: T;
  hotel_map_url?: T;
  room_number?: T;
  assigned_coordinator?: T;
  accommodation_details?: T;
  duration?:
    | T
    | {
        from_date?: T;
        to_date?: T;
      };
  status?: T;
  sort_order?: T;
  speaking_events?: T;
  'audit-log'?:
    | T
    | {
        createdBy?: T;
        updatedBy?: T;
        log?:
          | T
          | {
              createdAt?: T;
              updatedAt?: T;
              version?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speaker-types_select".
 */
export interface SpeakerTypesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  isActive?: T;
  sort_order?: T;
  requiresVisa?: T;
  defaultAccommodation?: T;
  averageBudget?:
    | T
    | {
        min?: T;
        max?: T;
        currency?: T;
      };
  requiredDocuments?:
    | T
    | {
        document?: T;
        id?: T;
      };
  color?: T;
  icon?: T;
  usageCount?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  banner_image?: T;
  title?: T;
  isPublic?: T;
  main_or_partner?: T;
  access_level?: T;
  format?: T;
  tags?: T;
  current_registerations?: T;
  slug?: T;
  about?: T;
  schedule?:
    | T
    | {
        from_date?: T;
        to_date?: T;
      };
  hall?: T;
  zone?: T;
  partner_event_venue?:
    | T
    | {
        event_mode?: T;
        platform?: T;
        joinUrl?: T;
        meetingId?: T;
        passcode?: T;
        venue?: T;
        city?: T;
        map_url?: T;
      };
  'audit-log'?:
    | T
    | {
        createdBy?: T;
        updatedBy?: T;
        log?:
          | T
          | {
              createdAt?: T;
              updatedAt?: T;
              version?: T;
            };
      };
  agenda?:
    | T
    | {
        time?: T;
        description?: T;
        id?: T;
      };
  speakers?:
    | T
    | {
        speaker?: T;
        id?: T;
      };
  registeration_mode?: T;
  fcfs_settings?:
    | T
    | {
        capacity_settings?:
          | T
          | {
              capacity_type?: T;
              max_capacity?: T;
              soft_capacity_warning?: T;
            };
        enable_waitlist?: T;
        waitlist_capacity?: T;
        auto_promote_from_waitlist?: T;
        registeration?:
          | T
          | {
              from_date?: T;
              to_date?: T;
            };
        unlimited_capacity_settings?:
          | T
          | {
              notify_admins_at?: T;
              auto_close_registeration_at?: T;
            };
      };
  approval_settings?:
    | T
    | {
        registeration?:
          | T
          | {
              from_date?: T;
              to_date?: T;
            };
        capacity_settings?:
          | T
          | {
              max_capacity?: T;
            };
      };
  deleted?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "networking-sessions_select".
 */
export interface NetworkingSessionsSelect<T extends boolean = true> {
  main_or_partner?: T;
  display_name?: T;
  isPublic?: T;
  main_event_sessions_config?:
    | T
    | {
        zone?: T;
        start_time?: T;
        end_time?: T;
        meeting_duration?: T;
        concurrent_meetings?: T;
        allowed_ticket_types?: T;
      };
  partner_event_sessions_config?:
    | T
    | {
        venue_name?: T;
        city?: T;
        event_date?: T;
        default_meeting_duration?: T;
        allowed_time_range?:
          | T
          | {
              earliest_start?: T;
              latest_start?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-formats_select".
 */
export interface EventFormatsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "halls_select".
 */
export interface HallsSelect<T extends boolean = true> {
  venue?: T;
  name?: T;
  image?: T;
  slug?: T;
  zones_count?: T;
  zones?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "zones_select".
 */
export interface ZonesSelect<T extends boolean = true> {
  hall?: T;
  hex_code?: T;
  slug?: T;
  name?: T;
  is_featured?: T;
  dimensions?: T;
  capacity?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues_select".
 */
export interface VenuesSelect<T extends boolean = true> {
  name?: T;
  city?: T;
  type?: T;
  mapUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cities_select".
 */
export interface CitiesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tickets_select".
 */
export interface TicketsSelect<T extends boolean = true> {
  slug?: T;
  isPublic?: T;
  name?: T;
  description?: T;
  badge_text?: T;
  pricing?:
    | T
    | {
        is_free?: T;
        has_discount?: T;
        discount_info?:
          | T
          | {
              discount_text?: T;
            };
        base_currency?: T;
        currency_prices?:
          | T
          | {
              currency?: T;
              actual_price?: T;
              discounted_price?: T;
              unit?: T;
              gst?:
                | T
                | {
                    tax_applicable?: T;
                    tax_rate?: T;
                    tax_inclusive?: T;
                    tax_code?: T;
                    tax_label?: T;
                  };
              currency_notes?: T;
              id?: T;
            };
        pricing_notes?: T;
      };
  auto_currency_detection?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  'audit-log'?:
    | T
    | {
        createdBy?: T;
        updatedBy?: T;
        log?:
          | T
          | {
              createdAt?: T;
              updatedAt?: T;
              version?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ticket-types_select".
 */
export interface TicketTypesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  external_integration?:
    | T
    | {
        vendorTicketTypeId?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "representatives_select".
 */
export interface RepresentativesSelect<T extends boolean = true> {
  name?: T;
  designation?: T;
  org_name?: T;
  phone_number?: T;
  email_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  roles?: T;
  status?: T;
  lastLogin?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  mediaType?: T;
  'audit-log'?:
    | T
    | {
        createdBy?: T;
        updatedBy?: T;
        log?:
          | T
          | {
              createdAt?: T;
              updatedAt?: T;
              version?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  title?: T;
  category?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "app-versions_select".
 */
export interface AppVersionsSelect<T extends boolean = true> {
  isCurrentVersion?: T;
  version?: T;
  android_version?: T;
  platform?: T;
  updateType?: T;
  minimumSupportedVersion?: T;
  releaseNotes?: T;
  appStoreUrl?: T;
  playStoreUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendee-passes_select".
 */
export interface AttendeePassesSelect<T extends boolean = true> {
  pass_id?: T;
  pass_type?: T;
  pass_type_id?: T;
  name?: T;
  email?: T;
  gender?: T;
  mobile?: T;
  designation?: T;
  organisation?: T;
  registration_email?: T;
  registration_organisation?: T;
  registration_city?: T;
  registration_state?: T;
  registration_country?: T;
  organisation_type?: T;
  profile_type?: T;
  sector_interested?: T;
  why_attending?: T;
  website?: T;
  legacy_created_at?: T;
  legacy_visitor_id?: T;
  checked_in?: T;
  checkin_data?: T;
  migration_notes?: T;
  upgrade?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "organisation_roles_select".
 */
export interface OrganisationRolesSelect<T extends boolean = true> {
  organisation_type?: T;
  roles?:
    | T
    | {
        label?: T;
        key?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports_select".
 */
export interface ExportsSelect<T extends boolean = true> {
  name?: T;
  format?: T;
  limit?: T;
  sort?: T;
  drafts?: T;
  selectionToUse?: T;
  fields?: T;
  collectionSlug?: T;
  where?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-wp".
 */
export interface HomeWp {
  id: string;
  global_pavilion?: {
    title?: string | null;
    description?: string | null;
    flags?:
      | {
          country?: string | null;
          flag?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  featured_speakers?: {
    speakers?:
      | {
          speaker?: (string | null) | Speaker;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us-wp".
 */
export interface AboutUsWp {
  id: string;
  hero?: {
    title?: string | null;
    desc?: string | null;
  };
  introduction?: {
    /**
     * Main heading for the introduction section
     */
    title?: string | null;
    /**
     * Introduction content. Each point will be a paragraph.
     */
    description?:
      | {
          point?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  mission?: {
    /**
     * Main heading for the mission section
     */
    title?: string | null;
    /**
     * Mission content. Each point will be a paragraph.
     */
    description?:
      | {
          point?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Image to display alongside the mission content
     */
    image?: (string | null) | Media;
    /**
     * Alternative text for the image (for accessibility)
     */
    imageAlt?: string | null;
  };
  whyStartupTN?: {
    title?: string | null;
    description?: string | null;
    vision?: {
      title?: string | null;
      description?: string | null;
    };
    mission?: {
      title?: string | null;
      description?: string | null;
    };
    keyHighlights?: {
      title?: string | null;
      points?:
        | {
            text?: string | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  whyTN?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  steering_committe?: {
    title?: string | null;
    members?:
      | {
          name?: string | null;
          designation?: string | null;
          organization?: string | null;
          image?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  committe?: {
    title?: string | null;
    members?:
      | {
          name?: string | null;
          designation?: string | null;
          organization?: string | null;
          image?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  pavilionTitle?: string | null;
  pavilion?:
    | {
        title?: string | null;
        description?: string | null;
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  highlightsTitle?: string | null;
  highlights?:
    | {
        title?: string | null;
        description?: string | null;
        icon?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  getInvolved?: {
    title?: string | null;
    content?:
      | {
          para?: string | null;
          id?: string | null;
        }[]
      | null;
    images?:
      | {
          image?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
    ctas?:
      | {
          cta?: {
            label?: string | null;
            type?: ('internal' | 'external') | null;
            page?: string | null;
            url?: string | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-attend-wp".
 */
export interface WhyAttendWp {
  id: string;
  discover_tn?: {
    title?: string | null;
    content?:
      | {
          para?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  stakeholders?:
    | {
        title?: string | null;
        sub_title?: string | null;
        image?: (string | null) | Media;
        description?: string | null;
        points?:
          | {
              title?: string | null;
              description?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-tn-wp".
 */
export interface WhyTnWp {
  id: string;
  discover_tn?: {
    title?: string | null;
    description?: string | null;
    impact_numbers?:
      | {
          number?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  sector_higlights?: {
    title?: string | null;
    powerhouse?: {
      title?: string | null;
      points?:
        | {
            point?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    leadership?: {
      title?: string | null;
      sector_cards?:
        | {
            title?: string | null;
            description?: string | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  tn_highlights?: {
    highlight?:
      | {
          title?: string | null;
          image?: (string | null) | Media;
          points?:
            | {
                sub_title?: string | null;
                description?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tickets-info-wp".
 */
export interface TicketsInfoWp {
  id: string;
  section_headers?: {
    pass_headers?: {
      title?: string | null;
      description?: string | null;
    };
    exhibitor_headers?: {
      title?: string | null;
      description?: string | null;
    };
  };
  guidelines?: {
    guidelines?:
      | {
          name?: string | null;
          points?:
            | {
                point?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Tickets are a seperate collection, manage them over there
   */
  tickets?: {};
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-wp".
 */
export interface FaqWp {
  id: string;
  hero?: {
    title?: string | null;
    sub_title?: string | null;
    tagline?: string | null;
  };
  faq_blocks?:
    | {
        faq_block?: {
          heading?: string | null;
          questions_and_answers?:
            | {
                question?: string | null;
                answer?:
                  | {
                      paragraph?: string | null;
                      id?: string | null;
                    }[]
                  | null;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spons-and-partners-wp".
 */
export interface SponsAndPartnersWp {
  id: string;
  sponsors?: {
    diamond?: {
      /**
       * Header text for this sponsor tier section
       */
      header?: string | null;
      logos?:
        | {
            /**
             * Upload the logo in 420x250 format or similar aspect ratio without any white background
             */
            logo: string | Media;
            url?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    platinum?: {
      /**
       * Header text for this sponsor tier section
       */
      header?: string | null;
      logos?:
        | {
            /**
             * Upload the logo in 380x200 format or similar aspect ratio without any white background
             */
            logo: string | Media;
            url?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    gold?: {
      /**
       * Header text for this sponsor tier section
       */
      header?: string | null;
      logos?:
        | {
            /**
             * Upload the logo in 340x180 format or similar aspect ratio without any white background
             */
            logo: string | Media;
            url?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    silver?: {
      /**
       * Header text for this sponsor tier section
       */
      header?: string | null;
      logos?:
        | {
            /**
             * Upload the logo in 240x125 format or similar aspect ratio without any white background
             */
            logo: string | Media;
            url?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    bronze?: {
      /**
       * Header text for this sponsor tier section
       */
      header?: string | null;
      logos?:
        | {
            /**
             * Upload the logo in 220x105 format or similar aspect ratio without any white background
             */
            logo: string | Media;
            url?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    other?:
      | {
          /**
           * Header text for this sponsor tier section
           */
          header?: string | null;
          logos?:
            | {
                /**
                 * Upload the logo in 200x90 format or similar aspect ratio without any white background
                 */
                logo: string | Media;
                url?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  partners?: {
    partners?:
      | {
          /**
           * Header text for this sponsor tier section
           */
          header?: string | null;
          logos?:
            | {
                /**
                 * Upload the logo in 200x90 format or similar aspect ratio without any white background
                 */
                logo: string | Media;
                url?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-sponsor-wp".
 */
export interface WhySponsorWp {
  id: string;
  about_tngss?: {
    title?: string | null;
    image_block?: {
      caption?: string | null;
      description?: string | null;
      image?: (string | null) | Media;
    };
    /**
     * Seperate paragraphs with a empty line
     */
    content?: string | null;
  };
  event_highlights?: {
    title?: string | null;
    impact_numbers?:
      | {
          number?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  spons_benefits?: {
    title?: string | null;
    cards?:
      | {
          icon?: (string | null) | Media;
          title?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sponsor-form-wp".
 */
export interface SponsorFormWp {
  id: string;
  title?: string | null;
  description?: string | null;
  form?: (string | null) | Form;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-app".
 */
export interface HomeApp {
  id: string;
  /**
   * Upload Banner Images that will be shown as carousel in the mobile app home page
   */
  home_banners?:
    | {
        image?: (string | null) | Media;
        /**
         * Configure what happens when user clicks this banner
         */
        click_action?: {
          /**
           * Choose whether to navigate to an internal app screen or external website
           */
          type?: ('none' | 'internal' | 'external') | null;
          /**
           * Select which screen to navigate to within the app
           */
          internal_route?: string | null;
          /**
           * Enter the full URL (must start with http:// or https://)
           */
          external_url?: string | null;
          /**
           * Check this to open the URL in the device default browser instead of in-app browser
           */
          open_in_browser?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  sponsors_and_partners?:
    | {
        image?: (string | null) | Media;
        bg_image?: (string | null) | Media;
        /**
         * Configure what happens when user clicks this banner
         */
        click_action?: {
          /**
           * Choose whether to navigate to an internal app screen or external website
           */
          type?: ('none' | 'internal' | 'external') | null;
          /**
           * Select which screen to navigate to within the app
           */
          internal_route?: string | null;
          /**
           * Enter the full URL (must start with http:// or https://)
           */
          external_url?: string | null;
          /**
           * Check this to open the URL in the device default browser instead of in-app browser
           */
          open_in_browser?: boolean | null;
        };
        image_url?: string | null;
        image_filename?: string | null;
        bg_image_url?: string | null;
        bg_image_filename?: string | null;
        id?: string | null;
      }[]
    | null;
  showcases?:
    | {
        image?: (string | null) | Media;
        bg_image?: (string | null) | Media;
        /**
         * Configure what happens when user clicks this banner
         */
        click_action?: {
          /**
           * Choose whether to navigate to an internal app screen or external website
           */
          type?: ('none' | 'internal' | 'external') | null;
          /**
           * Select which screen to navigate to within the app
           */
          internal_route?: string | null;
          /**
           * Enter the full URL (must start with http:// or https://)
           */
          external_url?: string | null;
          /**
           * Check this to open the URL in the device default browser instead of in-app browser
           */
          open_in_browser?: boolean | null;
        };
        image_url?: string | null;
        image_filename?: string | null;
        bg_image_url?: string | null;
        bg_image_filename?: string | null;
        id?: string | null;
      }[]
    | null;
  special_events?:
    | {
        image?: (string | null) | Media;
        bg_image?: (string | null) | Media;
        format?: (string | null) | EventFormat;
        format_id?: string | null;
        format_name?: string | null;
        format_slug?: string | null;
        image_url?: string | null;
        image_filename?: string | null;
        bg_image_url?: string | null;
        bg_image_filename?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Enable to include this item in lists, filters, or dropdowns.
   */
  isActive?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "featured-content-app".
 */
export interface FeaturedContentApp {
  id: string;
  featured_events?:
    | {
        event?: (string | null) | Event;
        id?: string | null;
      }[]
    | null;
  featured_speakers?:
    | {
        speaker?: (string | null) | Speaker;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-tngss-app".
 */
export interface AboutTngssApp {
  id: string;
  about_venue?: {
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    cta_label?: string | null;
    cta_url?: string | null;
  };
  faq?: {
    faq_blocks?:
      | {
          faq_block?: {
            heading?: string | null;
            questions_and_answers?:
              | {
                  question?: string | null;
                  answer?:
                    | {
                        paragraph?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  arriving_to_tngss?: {
    venue_details?: {
      name?: string | null;
      full_address?: string | null;
      map_url?: string | null;
    };
    transportation_options?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  contact_us?: {
    contact_info?:
      | {
          label?: string | null;
          emails?:
            | {
                email?: string | null;
                id?: string | null;
              }[]
            | null;
          phone_numbers?:
            | {
                phone?: string | null;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    social_media_links?:
      | {
          platform:
            | 'facebook'
            | 'twitter'
            | 'instagram'
            | 'linkedin'
            | 'youtube'
            | 'telegram'
            | 'whatsapp'
            | 'discord'
            | 'website'
            | 'other';
          /**
           * Enter custom platform name when "Other" is selected
           */
          platform_custom?: string | null;
          url: string;
          /**
           * e.g., @startuptn for display purposes
           */
          handle?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  staying_in_coimbatore?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  about_startuptn?: {
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    cta_label?: string | null;
    cta_url?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-form-wp".
 */
export interface MediaFormWp {
  id: string;
  title?: string | null;
  description?: string | null;
  form?: (string | null) | Form;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-wp_select".
 */
export interface HomeWpSelect<T extends boolean = true> {
  global_pavilion?:
    | T
    | {
        title?: T;
        description?: T;
        flags?:
          | T
          | {
              country?: T;
              flag?: T;
              id?: T;
            };
      };
  featured_speakers?:
    | T
    | {
        speakers?:
          | T
          | {
              speaker?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us-wp_select".
 */
export interface AboutUsWpSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        desc?: T;
      };
  introduction?:
    | T
    | {
        title?: T;
        description?:
          | T
          | {
              point?: T;
              id?: T;
            };
      };
  mission?:
    | T
    | {
        title?: T;
        description?:
          | T
          | {
              point?: T;
              id?: T;
            };
        image?: T;
        imageAlt?: T;
      };
  whyStartupTN?:
    | T
    | {
        title?: T;
        description?: T;
        vision?:
          | T
          | {
              title?: T;
              description?: T;
            };
        mission?:
          | T
          | {
              title?: T;
              description?: T;
            };
        keyHighlights?:
          | T
          | {
              title?: T;
              points?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
            };
      };
  whyTN?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  steering_committe?:
    | T
    | {
        title?: T;
        members?:
          | T
          | {
              name?: T;
              designation?: T;
              organization?: T;
              image?: T;
              id?: T;
            };
      };
  committe?:
    | T
    | {
        title?: T;
        members?:
          | T
          | {
              name?: T;
              designation?: T;
              organization?: T;
              image?: T;
              id?: T;
            };
      };
  pavilionTitle?: T;
  pavilion?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  highlightsTitle?: T;
  highlights?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  getInvolved?:
    | T
    | {
        title?: T;
        content?:
          | T
          | {
              para?: T;
              id?: T;
            };
        images?:
          | T
          | {
              image?: T;
              id?: T;
            };
        ctas?:
          | T
          | {
              cta?:
                | T
                | {
                    label?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-attend-wp_select".
 */
export interface WhyAttendWpSelect<T extends boolean = true> {
  discover_tn?:
    | T
    | {
        title?: T;
        content?:
          | T
          | {
              para?: T;
              id?: T;
            };
      };
  stakeholders?:
    | T
    | {
        title?: T;
        sub_title?: T;
        image?: T;
        description?: T;
        points?:
          | T
          | {
              title?: T;
              description?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-tn-wp_select".
 */
export interface WhyTnWpSelect<T extends boolean = true> {
  discover_tn?:
    | T
    | {
        title?: T;
        description?: T;
        impact_numbers?:
          | T
          | {
              number?: T;
              description?: T;
              id?: T;
            };
      };
  sector_higlights?:
    | T
    | {
        title?: T;
        powerhouse?:
          | T
          | {
              title?: T;
              points?:
                | T
                | {
                    point?: T;
                    id?: T;
                  };
            };
        leadership?:
          | T
          | {
              title?: T;
              sector_cards?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
            };
      };
  tn_highlights?:
    | T
    | {
        highlight?:
          | T
          | {
              title?: T;
              image?: T;
              points?:
                | T
                | {
                    sub_title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tickets-info-wp_select".
 */
export interface TicketsInfoWpSelect<T extends boolean = true> {
  section_headers?:
    | T
    | {
        pass_headers?:
          | T
          | {
              title?: T;
              description?: T;
            };
        exhibitor_headers?:
          | T
          | {
              title?: T;
              description?: T;
            };
      };
  guidelines?:
    | T
    | {
        guidelines?:
          | T
          | {
              name?: T;
              points?:
                | T
                | {
                    point?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  tickets?: T | {};
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-wp_select".
 */
export interface FaqWpSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        sub_title?: T;
        tagline?: T;
      };
  faq_blocks?:
    | T
    | {
        faq_block?:
          | T
          | {
              heading?: T;
              questions_and_answers?:
                | T
                | {
                    question?: T;
                    answer?:
                      | T
                      | {
                          paragraph?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spons-and-partners-wp_select".
 */
export interface SponsAndPartnersWpSelect<T extends boolean = true> {
  sponsors?:
    | T
    | {
        diamond?:
          | T
          | {
              header?: T;
              logos?:
                | T
                | {
                    logo?: T;
                    url?: T;
                    id?: T;
                  };
            };
        platinum?:
          | T
          | {
              header?: T;
              logos?:
                | T
                | {
                    logo?: T;
                    url?: T;
                    id?: T;
                  };
            };
        gold?:
          | T
          | {
              header?: T;
              logos?:
                | T
                | {
                    logo?: T;
                    url?: T;
                    id?: T;
                  };
            };
        silver?:
          | T
          | {
              header?: T;
              logos?:
                | T
                | {
                    logo?: T;
                    url?: T;
                    id?: T;
                  };
            };
        bronze?:
          | T
          | {
              header?: T;
              logos?:
                | T
                | {
                    logo?: T;
                    url?: T;
                    id?: T;
                  };
            };
        other?:
          | T
          | {
              header?: T;
              logos?:
                | T
                | {
                    logo?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  partners?:
    | T
    | {
        partners?:
          | T
          | {
              header?: T;
              logos?:
                | T
                | {
                    logo?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-sponsor-wp_select".
 */
export interface WhySponsorWpSelect<T extends boolean = true> {
  about_tngss?:
    | T
    | {
        title?: T;
        image_block?:
          | T
          | {
              caption?: T;
              description?: T;
              image?: T;
            };
        content?: T;
      };
  event_highlights?:
    | T
    | {
        title?: T;
        impact_numbers?:
          | T
          | {
              number?: T;
              description?: T;
              id?: T;
            };
      };
  spons_benefits?:
    | T
    | {
        title?: T;
        cards?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sponsor-form-wp_select".
 */
export interface SponsorFormWpSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  form?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-app_select".
 */
export interface HomeAppSelect<T extends boolean = true> {
  home_banners?:
    | T
    | {
        image?: T;
        click_action?:
          | T
          | {
              type?: T;
              internal_route?: T;
              external_url?: T;
              open_in_browser?: T;
            };
        id?: T;
      };
  sponsors_and_partners?:
    | T
    | {
        image?: T;
        bg_image?: T;
        click_action?:
          | T
          | {
              type?: T;
              internal_route?: T;
              external_url?: T;
              open_in_browser?: T;
            };
        image_url?: T;
        image_filename?: T;
        bg_image_url?: T;
        bg_image_filename?: T;
        id?: T;
      };
  showcases?:
    | T
    | {
        image?: T;
        bg_image?: T;
        click_action?:
          | T
          | {
              type?: T;
              internal_route?: T;
              external_url?: T;
              open_in_browser?: T;
            };
        image_url?: T;
        image_filename?: T;
        bg_image_url?: T;
        bg_image_filename?: T;
        id?: T;
      };
  special_events?:
    | T
    | {
        image?: T;
        bg_image?: T;
        format?: T;
        format_id?: T;
        format_name?: T;
        format_slug?: T;
        image_url?: T;
        image_filename?: T;
        bg_image_url?: T;
        bg_image_filename?: T;
        id?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "featured-content-app_select".
 */
export interface FeaturedContentAppSelect<T extends boolean = true> {
  featured_events?:
    | T
    | {
        event?: T;
        id?: T;
      };
  featured_speakers?:
    | T
    | {
        speaker?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-tngss-app_select".
 */
export interface AboutTngssAppSelect<T extends boolean = true> {
  about_venue?:
    | T
    | {
        content?: T;
        cta_label?: T;
        cta_url?: T;
      };
  faq?:
    | T
    | {
        faq_blocks?:
          | T
          | {
              faq_block?:
                | T
                | {
                    heading?: T;
                    questions_and_answers?:
                      | T
                      | {
                          question?: T;
                          answer?:
                            | T
                            | {
                                paragraph?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  arriving_to_tngss?:
    | T
    | {
        venue_details?:
          | T
          | {
              name?: T;
              full_address?: T;
              map_url?: T;
            };
        transportation_options?: T;
      };
  contact_us?:
    | T
    | {
        contact_info?:
          | T
          | {
              label?: T;
              emails?:
                | T
                | {
                    email?: T;
                    id?: T;
                  };
              phone_numbers?:
                | T
                | {
                    phone?: T;
                    id?: T;
                  };
              id?: T;
            };
        social_media_links?:
          | T
          | {
              platform?: T;
              platform_custom?: T;
              url?: T;
              handle?: T;
              id?: T;
            };
      };
  staying_in_coimbatore?: T;
  about_startuptn?:
    | T
    | {
        content?: T;
        cta_label?: T;
        cta_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-form-wp_select".
 */
export interface MediaFormWpSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  form?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCreateCollectionExport".
 */
export interface TaskCreateCollectionExport {
  input: {
    name?: string | null;
    format?: ('csv' | 'json') | null;
    limit?: number | null;
    sort?: string | null;
    drafts?: ('yes' | 'no') | null;
    selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
    fields?: string[] | null;
    collectionSlug: string;
    where?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    user?: string | null;
    userCollection?: string | null;
    exportsCollection?: string | null;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}